server.port=9090
spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:mysql://localhost:3306/testdb
spring.datasource.username=root
spring.datasource.password=Atul@1234
#spring.datasource.url=jdbc:mysql://ec2-65-1-112-98.ap-south-1.compute.amazonaws.com:3306/mysql_test
#spring.datasource.username=testusers
#spring.datasource.password=password
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.show-sql: true
#
#spring.main.allow-bean-definition-overriding=true
spring.main.allow-bean-definition-overriding=false


spring.freemarker.template-loader-path=classpath:/templates/
spring.freemarker.suffix=.ftl
spring.freemarker.cache=false
spring.freemarker.charset=UTF-8
spring.freemarker.expose-spring-macro-helpers=true

spring.kafka.consumer.auto-offset-reset: earliest


spring.elasticsearch.uris=https://127.0.0.1:9200
spring.elasticsearch.username=elastic
spring.elasticsearch.password=X3C74dZwgD_56xxa-N1R
spring.elasticsearch.restclient.ssl.certificate-path=classpath:certs/http_ca.crt

#curl -X GET "https://127.0.0.1:9200/_cluster/health?pretty" -u elastic:X3C74dZwgD_56xxa-N1R --cacert /Users/atul/Documents/run/main/_accounts/Java-Techie-jt/spring-boot-elasticsearch-example/src/main/resources/certs/http_ca.crt
#keytool -import -trustcacerts -alias elasticsearch-ca -file /Users/atul/Documents/run/main/_accounts/Java-Techie-jt/spring-boot-elasticsearch-example/src/main/resources/certs/http_ca.crt -keystore $JAVA_HOME/lib/security/cacerts
#to check the certificate in the keystore:
#keytool -list -keystore $JAVA_HOME/lib/security/cacerts | grep elasticsearch-ca
